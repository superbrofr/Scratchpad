package gLServlet;

import java.util.ArrayList;
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
import businessLayer.ProfileManager;
import businessLayer.SessionStrings;
import dao.UserDAO;
import dao.GameDAO;
import dao.OwnedGameDAO;

/**
 * Displays a public view of a users' game library.
 */
public class PublicUserProfileGames extends HttpServlet
{
	
	private static final int PC_BOX_WIDTH = 149;
	private static final int PC_BOX_HEIGHT = 206;
	private static final int PS3_BOX_WIDTH = 160;
	private static final int PS3_BOX_HEIGHT = 192;
	private static final int X360_BOX_WIDTH = 158;
	private static final int X360_BOX_HEIGHT = 206;

	private static final int pageSize = 15;
	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException
	{
		PrintWriter out = response.getWriter();
		response.setContentType("text/html");
		HTMLHelpers.printHead(out);
		HTMLHelpers.printToOpenCenterContent(out, request.getSession(), "publicUserProfile");

		// Start printing game library data
		
		String pathInfo[] = null;
		if(request.getPathInfo() != null)
			pathInfo = request.getPathInfo().split("/");
		String lUsername = null;
		if((pathInfo != null) && (pathInfo.length == 2))
			lUsername = pathInfo[1];
		
		if(lUsername == null){
			HTMLHelpers.printPublicUserGamesError(out);
		}
		else{
			out.println("<div class=\"heading\">" + lUsername + "'s Stuff</div>");
			
			int lPage = 0;
			if(request.getParameter("page") != null)
				lPage = Integer.parseInt(request.getParameter("page"));
			
			out.println(getNextPage(lUsername, lPage, pageSize));
		}
		
		// Stop printing game library data
		
		HTMLHelpers.printCenterContentToClose(out);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException
	{
		doGet(request, response);
	}
	
	/**
	 * Returns the next page of games.
	 * @param username The username whos games we want to retrieve.
	 * @param aPage The page of games to retrieve.
	 * @param aPageSize The size of the page to retrieve.
	 * @return A string which will display the next page of games.
	 */
	private String getNextPage(String username, int aPage, int aPageSize)
	{
		ArrayList<OwnedGameDAO> lGames;
		lGames = ProfileManager.fetchUserGames(username, aPage, 5);
		//System.out.println("lGames size: " + lGames.size());
		String lResult = "";
		if(lGames != null){
			lResult += "<p align=center>";
			for(OwnedGameDAO og: lGames){
				GameDAO g = og.getGame();
				lResult += "<a class=\"topgame\" href=\"/game/" + g.getPlat().getPlatName() + "/" + g.getDev().getDevName() + "/" + g.getGameName() + "\">";
				if(g.getPlat().getPlatName().equals("PC"))
					lResult += "<img src=\"" + g.getBoxImgLink() + "\" height=" + PC_BOX_HEIGHT + " width=" + PC_BOX_WIDTH + "alt=\"" + g.getGameName() + "\" title=\"" + g.getGameName() + " (" + g.getPlat().getPlatName() + ")\"/>";
				else if(g.getPlat().getPlatName().equals("Playstation 3"))
					lResult += "<img src=\"" + g.getBoxImgLink() + "\" height=" + PS3_BOX_HEIGHT + " width=" + PS3_BOX_WIDTH + "alt=\"" + g.getGameName() + "\" title=\"" + g.getGameName() + " (" + g.getPlat().getPlatName() + ")\"/>";
				else if(g.getPlat().getPlatName().equals("Xbox 360"))
					lResult += "<img src=\"" + g.getBoxImgLink() + "\" height=" + X360_BOX_HEIGHT + " width=" + X360_BOX_WIDTH + "alt=\"" + g.getGameName() + "\" title=\"" + g.getGameName() + " (" + g.getPlat().getPlatName() + ")\"/>";
				lResult += "</a>";
			}
			lResult += "</p>";
			if(aPage > 0)
				lResult += ("<p><a href=\"?page=" + (aPage - 1) + "\">Previous page</a></p>");
			if((lGames.size() == pageSize) && (ProfileManager.fetchUserGames(username, (aPage + 1), 5).size() > 0))
				lResult += ("<p><a href=\"?page=" + (aPage + 1) + "\">Next page</a></p>");
			
			if(lGames.size() == 0)
				lResult += "<p>No games to display!</p>";
		}
		return lResult;
	}
}
