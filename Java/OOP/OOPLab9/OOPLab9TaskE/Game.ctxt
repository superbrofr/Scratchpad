#BlueJ class context
comment0.params=args
comment0.target=void\ main(java.lang.String[])
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\r\n
comment10.params=itemName
comment10.target=void\ pickUpItem(java.lang.String)
comment10.text=\r\n\ Try\ to\ pick\ up\ an\ item.\ Will\ print\ a\ message\ if\ the\ item\ cannot\ be\ picked\ up.\r\n\ @param\ itemName\ The\ name\ of\ the\ item\ to\ try\ to\ pick\ up.\r\n
comment11.params=itemName
comment11.target=void\ dropItem(java.lang.String)
comment11.text=\r\n\ Drops\ the\ specified\ item\ from\ inventory.\ Checks\ if\ item\ is\ in\ inventory,\r\n\ and\ if\ so\ adds\ the\ item\ to\ the\ current\ room,\ then\ removes\ it\ from\ the\ inventory.\r\n\ @param\ itemName\ Name\ of\ item\ to\ drop.\r\n
comment12.params=monstName
comment12.target=void\ attackMonster(java.lang.String)
comment12.text=\r\n\ Sets\ player\ to\ attack\ the\ specified\ monster.\ Player\ automatically\ uses\r\n\ heaviest\ item\ in\ their\ inventory,\ for\ maximum\ damage.\r\n
comment13.params=
comment13.target=boolean\ checkAlive()
comment13.text=\r\n\ Checks\ if\ the\ player\ is\ still\ alive.\r\n\ @return\ False\ if\ player\ is\ dead,\ else\ true.\r\n
comment14.params=
comment14.target=boolean\ reachedGoal()
comment14.text=\r\n\ Checks\ if\ player\ has\ reached\ the\ goal\ room.\r\n\ @return\ True\ if\ in\ the\ goal\ room,\ with\ the\ key,\ else\ false.\r\n
comment15.params=
comment15.target=void\ drinkPotion()
comment15.text=\r\n\ The\ player\ drinks\ a\ potion.\r\n
comment16.params=
comment16.target=void\ showInventory()
comment16.text=\r\n\ Shows\ the\ inventory\ of\ the\ player.\r\n
comment17.params=
comment17.target=void\ getItem()
comment17.text=\r\n\ Starts\ the\ process\ for\ a\ user\ to\ pick\ up\ an\ item\ in-game.\r\n\ Opens\ a\ dialog\ and\ asks\ user\ which\ item,\ then\ filters\ that\ name\ through\ \ to\r\n\ the\ regular\ pickUpItem()\ method.\r\n\ @param\ frame\ The\ frame\ to\ which\ to\ associate\ the\ dialog.\r\n
comment18.params=e
comment18.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment19.params=
comment19.target=void\ getDropItem()
comment19.text=\r\n\ Asks\ the\ user\ which\ item\ they\ would\ like\ to\ drop,\ and\ then\ drops\ it\ from\ their\ inventory,\r\n\ and\ adds\ it\ to\ the\ room\ the\ player\ is\ currently\ in.\r\n
comment2.params=
comment2.target=void\ initialiseGame()
comment2.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\r\n\ Create\ items\ and\ monsters\ and\ place\ them\ in\ appropriate\ rooms.\r\n
comment20.params=e
comment20.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment21.params=
comment21.target=void\ getAttackMonster()
comment21.text=\r\n\ Asks\ the\ user\ which\ monster\ they\ would\ like\ to\ attack,\ and\ then\ proceeds\ with\ the\ attack\ process.\r\n
comment22.params=e
comment22.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment23.params=
comment23.target=void\ setUpGUI()
comment23.text=\r\n\ Creates\ the\ GUI\ for\ the\ Zuul\ game.\r\n
comment24.params=e
comment24.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment25.params=e
comment25.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment26.params=e
comment26.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment27.params=e
comment27.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment28.params=e
comment28.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment29.params=e
comment29.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment3.params=
comment3.target=void\ play()
comment3.text=\r\n\ \ Main\ play\ routine.\ Executes\ one\ 'move'\ of\ play.\r\n
comment30.params=e
comment30.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment31.params=e
comment31.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment32.params=e
comment32.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment33.params=e
comment33.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment34.params=e
comment34.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment4.params=
comment4.target=java.lang.String\ printWelcome()
comment4.text=\r\n\ Return\ a\ string\ of\ the\ opening\ message\ for\ the\ player.\r\n\ @return\ The\ opening\ message\ for\ the\ player\r\n
comment5.params=command
comment5.target=boolean\ processCommand(Command)
comment5.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ @param\ command\ The\ command\ to\ be\ processed.\r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
comment6.params=
comment6.target=void\ printHelp()
comment6.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\ \r\n\ command\ words.\r\n
comment7.params=command
comment7.target=void\ goRoom(Command)
comment7.text=\ \r\n\ Try\ to\ go\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n
comment8.params=command
comment8.target=boolean\ quit(Command)
comment8.text=\ \r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment9.params=
comment9.target=boolean\ checkMoves()
comment9.text=\r\n\ Checks\ if\ user\ has\ reached\ the\ move\ limit.\r\n\ @return\ True\ if\ user\ has\ reached\ limit,\ otherwise\ false.\r\n
numComments=35
